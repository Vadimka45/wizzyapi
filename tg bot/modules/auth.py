from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message
from config import LOGIN_PASSWORD

router = Router()

@router.message(Command('start'))
async def start_cmd(message: Message, authorized_users: set):
    if message.from_user.id in authorized_users:
        await message.answer("<b>–í—ã —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã!</b>\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/info</code> –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID.", parse_mode="HTML")
        return
    
    username = message.from_user.username or message.from_user.first_name or "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    text = (
        f"üëã –ü—Ä–∏–≤–µ—Ç, <i>{username}</i>!\n\n"
        f"‚ùå –¢—ã –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.\n\n"
        f"üóùÔ∏è –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ <b>—Å–µ–∫—Ä–µ—Ç–Ω—ã–π –ø–∞—Ä–æ–ª—å</b>, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É."
    )
    await message.answer(text, parse_mode="HTML")

@router.message()
async def handle_password(message: Message, authorized_users: set, save_func: callable):
    if message.from_user.id in authorized_users:
        return

    if message.text == LOGIN_PASSWORD:
        authorized_users.add(message.from_user.id)
        save_func()
        await message.answer("<b>‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è!</b>\n–¢–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–Ω—ã –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞.", parse_mode="HTML")
    else:
        await message.answer("<b>‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å! –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.</b>", parse_mode="HTML") 